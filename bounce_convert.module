<?php

/**
 * @file
 * Primarily Drupal hooks and global API functions to manipulate this module.
 *
 * This is the main module file for Bounce Convert. The main entry points into
 * this module are hook_node_info(),hook_field_group_info(),
 * bounce_convert_ctools_plugin_api() and hook_form(), where it handles
 * creating content type and form values.
 */
// All functions within this file need the bellow files.
module_load_include('inc', 'bounce_convert', 'bounce_convert.admin');
module_load_include('inc', 'webform', 'includes/webform.report');

/**
 * Implement hook_menu().
 */
function bounce_convert_menu() {
  $items = array();
  // Campaign submission listing and Reoport
  $items['bounce-convert/%/results'] = array(
    'title' => 'Campaign Report',
    'description' => 'Impression/Conversion and submission report',
    'page callback' => 'bounce_convert_get_submissions',
    'access callback' => 'webform_results_access',
    'access arguments' => array(1),
  );

  $items['bounce-convert/%/results/conversion'] = array(
    'title' => 'Conversion',
    'type' => MENU_CALLBACK,
    'weight' => -10,
    'access arguments' => array(1),
    'access callback' => 'webform_results_access',
    'page callback' => 'bounce_convert_get_submissions',
  );

  $items['bounce-convert/%/results/impression'] = array(
    'title' => 'Impression',
    'type' => MENU_CALLBACK,
    'page callback' => 'bounce_convert_get_submissions',
    'access callback' => 'webform_results_access',
    'access arguments' => array(1),
  );
  $items['bounce-convert/%/results/percentage'] = array(
    'title' => 'Percentage',
    'type' => MENU_CALLBACK,
    'access callback' => 'webform_results_access',
    'access arguments' => array(1),
    'page callback' => 'bounce_convert_get_submissions',
  );

  // Campaigns listing.
  $items['admin/content/campaigns'] = array(
    'title' => 'Bounce Campaigns',
    'description' => 'View and edit all the available campaigns on your site',
    'page callback' => 'drupal_goto',
    'page arguments' => array('admin/content/campaign'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  $items['bounce_convert_impression'] = array(
    'page callback' => 'bounce_convert_impression_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements impression_callback().
 */
function bounce_convert_impression_callback() {
  global $user;

  // $bounce_convert_campaign_id: return campaign node id value as argument from Ajax call
  $bounce_convert_campaign_id = isset($_POST['campaign_id']) ? $_POST['campaign_id'] : '';
  // $bounce_convert_nid: return webform id value as argument from Ajax call
  $bounce_convert_webform_id = isset($_POST['webform_id']) ? $_POST['webform_id'] : '';
  //@bounce_convert_page_path: return current page url as argument from Ajax call
  $bounce_convert_page_path = isset($_POST['page_path']) ? $_POST['page_path'] : '';

  if ($bounce_convert_campaign_id != '') {
    //Insert impression value to table
    $id = db_insert('bounce_convert_impressions')
        ->fields(array(
          'webform_id' => $bounce_convert_webform_id,
          'campaign_id' => $bounce_convert_campaign_id,
          'sid' => 0,
          'uid' => $user->uid,
          'impression' => 1,
          'conversion' => 0,
          'ip_address' => ip_address(),
          'path' => $bounce_convert_page_path,
          'timestamp' => time(),
        ))
        ->execute();
    $_SESSION['bounce_convert_impressions_id'] = $id;
  }
}

/**
 * Show chart and submissions on campaign report page.
 * @return array
 */
function bounce_convert_get_submissions() {
  $output = '';
  $nid = arg(1);
  if (arg(0) == 'bounce-convert' && is_numeric($nid)) {
    $node = node_load($nid);
    $report_duration = arg(4);

    $bounce_convert_total_conversion = array_sum(bounce_convert_chart_data($report_duration, 'conversion', $nid));
    $bounce_convert_total_impression = array_sum(bounce_convert_chart_data($report_duration, 'impression', $nid));
    $bounce_convert_percentage = bounce_convert_overall_percentage($bounce_convert_total_conversion, $bounce_convert_total_impression);

    // Chart Properities
    $chart = array(
      '#type' => 'chart',
      '#chart_type' => 'line',
    );

    // Conversion
    $chart['conversion'] = array(
      '#type' => 'chart_data',
      '#title' => t('Conversions'),
      '#data' => bounce_convert_chart_data($report_duration, 'conversion', $nid),
    );

    if (arg(3) == 'impression') {
      // Impressions
      $chart['impression'] = array(
        '#type' => 'chart_data',
        '#title' => t('Imressions'),
        '#data' => bounce_convert_chart_data($report_duration, 'impression', $nid),
      );
    }

    $chart['xaxis'] = array(
      '#type' => 'chart_xaxis',
      '#title' => t('Time Duration'),
      '#labels' => bounce_convert_chart_labels($report_duration),
    );

    $bounce_convert_filter_url = '/conversion';
    if (arg(3) == 'impression' || arg(3) == 'percentage' || arg(3) == 'conversion') {
      $bounce_convert_filter_url = '/' . arg(3);
    }

    // Filter options from bounce_convert.tpl file
    $output .= theme('bounce_convert', array(
      'bounce_convert_filter_url' => $bounce_convert_filter_url,
      'bounce_convert_percentage' => $bounce_convert_percentage,
      'bounce_convert_impressions' => $bounce_convert_total_impression,
      'bounce_convert_conversions' => $bounce_convert_total_conversion,
        )
    );

    // Render chart
    if (arg(3) != 'percentage') {
//      $output .= drupal_render($chart);
    }
    $output .= webform_results_submissions($node, FALSE, '50');
  }
  return $output;
}

/**
 * Theme filter option for chart
 * hook_theme
 */
function bounce_convert_theme() {
  return array(
    'bounce_convert' => array(
      'template' => 'bounce_convert',
      'variables' => array(
        'bounce_convert_filter_url' => NULL,
        'bounce_convert_percentage' => NULL,
        'bounce_convert_impressions' => NULL,
        'bounce_convert_conversions' => NULL),
    ),
  );
}

/**
 * Implements hook_ctools_plugin_api().
 */
function bounce_convert_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "field_group" && $api == "field_group") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_node_info().
 */
function bounce_convert_node_info() {
  $items = array(
    'bounce_convert_campaign' => array(
      'name' => t('Bounce Convert Campaign'),
      'base' => 'bounce_convert',
      'description' => t('Create a new campaign to detect and convert exiting web visitors into revenue.'),
      'has_title' => TRUE,
      'title_label' => t('Campaign title'),
    ),
  );
  return $items;
}

/**
 * Implements hook_field_group_info().
 */
function bounce_convert_field_group_info() {
  $export = array();

  $field_group = new stdClass();
  /* Edit this to true to make a default field_group disabled initially */
  $field_group->disabled = FALSE;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_modal_options|node|bounce_convert|form';
  $field_group->group_name = 'group_bcc_modal_options';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Modal options',
    'weight' => '3',
    'children' => array(
      0 => 'field_bcc_background_color',
      1 => 'field_bcc_background_opacity',
      2 => 'field_bcc_modal_height',
      3 => 'field_bcc_modal_width',
    ),
    'format_type' => 'fieldset',
    'format_settings' => array(
      'formatter' => 'collapsible',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-modal-options field-group-fieldset',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_modal_options|node|bounce_convert|form'] = $field_group;

  $field_group = new stdClass();
  /* Edit this to true to make a default field_group disabled initially */
  $field_group->disabled = FALSE;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_pages|node|bounce_convert|form';
  $field_group->group_name = 'group_bcc_pages';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = 'group_bcc_visibility_settings';
  $field_group->data = array(
    'label' => 'Pages',
    'weight' => '7',
    'children' => array(
      0 => 'field_bcc_pages_list',
      1 => 'field_bcc_pages_option',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-pages field-group-tab',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_pages|node|bounce_convert|form'] = $field_group;

  $field_group = new stdClass();
  /* Edit this to true to make a default field_group disabled initially */
  $field_group->disabled = FALSE;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_user_roles|node|bounce_convert|form';
  $field_group->group_name = 'group_bcc_user_roles';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = 'group_bcc_visibility_settings';
  $field_group->data = array(
    'label' => 'Roles',
    'weight' => '8',
    'children' => array(
      0 => 'field_bcc_specific_user_roles',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-user-roles field-group-tab',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_user_roles|node|bounce_convert|form'] = $field_group;

  $field_group = new stdClass();
  /* Edit this to true to make a default field_group disabled initially */
  $field_group->disabled = FALSE;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_visibility_settings|node|bounce_convert|form';
  $field_group->group_name = 'group_bcc_visibility_settings';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Visibility settings',
    'weight' => '7',
    'children' => array(
      0 => 'group_bcc_pages',
      1 => 'group_bcc_user_roles',
    ),
    'format_type' => 'tabs',
    'format_settings' => array(
      'formatter' => '',
      'instance_settings' => array(
        'classes' => 'group-bcc-visibility-settings field-group-tabs',
      ),
    ),
  );
  $export['group_bcc_visibility_settings|node|bounce_convert|form'] = $field_group;

  return $export;
}

/**
 * Implement hook_form().
 */
function bounce_convert_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implement hook_form_alter().
 * To update form field values after CRUD operation on webforms and user roles.
 */
function bounce_convert_form_alter(&$form, &$form_state, $form_id) {

  $pos = strpos($form_id, 'webform_client_form_');
  if ($pos !== FALSE) {
    if ($form_id == 'webform_client_form_' . $form['#node']->vid) {
      // Loop through webform fields
      foreach ($form['submitted'] as $key => $value) {
        //If type is Textfield
        if ($value['#type'] == 'textfield') {
          //Set the title of field as placeholder value
          $form['submitted'][$key]['#attributes'] = array('placeholder' => $value['#title']);
        }
      }
      // Update Submit button value/text
      $form['actions']['submit']['#value'] = "Get Your FREE Kit";
      // Custom funtion to make entry into cutom table
      $form['#submit'][] = 'bounce_convert_user_conversion';
    }
  }


  if ($form_id == "bounce_convert_campaign_node_form") {
    //get form field languge for exact match
    $lang = $form['field_bcc_select_webform']['#language'];
    $form['field_bcc_select_webform'][$lang]['#options'] = bounce_convert_webforms();

    $form['field_bcc_specific_user_roles'][$lang]['#options'] = user_roles($membersonly = FALSE);
    //if node edit page then set default value
    if (arg(0) == 'node' && arg(2) == 'edit') {
      $node = node_load(arg(1));
      $field_bcc_select_webform = field_get_items('node', $node, 'field_bcc_select_webform');
      $form['field_bcc_select_webform'][$lang]['#default_value'] = $field_bcc_select_webform[0]['value'];

      $field_bcc_specific_user_roles = field_get_items('node', $node, 'field_bcc_specific_user_roles');
      if (!empty($field_bcc_specific_user_roles)) {
        foreach ($field_bcc_specific_user_roles as $value) {
          $rid = $value['value'];
          $field_bcc_roles_default_options[$rid] = $rid;
        }
        //Show campaign for specific roles
        $form['field_bcc_specific_user_roles'][$lang]['#default_value'] = $field_bcc_roles_default_options;
      }
    }
  }
}

/**
 * hook_page_build().
 */
function bounce_convert_page_build(&$page) {
  global $user;
  global $base_url;

  //Fetch only campaigns that user role has permission for that
  $data = bounce_convert_check_campaigns($user->roles);

  if (!empty($data)) {

    $bounce_convert_campaign_id = $data['campaign_node_id'];
    $bounce_convert_webform_id = $data['webform_id'];
    $bounce_convert_cookie_expiry = $data['campaign_visit_cookie'];

    $bounce_convert_modal_width = $data['modal_width'];
    $bounce_convert_modal_height = $data['modal_height'];
    $bounce_convert_modal_bgcolor = $data['modal_bgcolor'];
    $bounce_convert_modal_opacity = $data['modal_opacity'];

    $bounce_convert_js_param = array(
      'webform_id' => $bounce_convert_webform_id,
      'campaign_id' => $bounce_convert_campaign_id,
      'cookie_expiry' => $bounce_convert_cookie_expiry,
      'page_path' => current_path(),
    );

    $throbber = theme('image', array('path' => ctools_image_path('loading_animation.gif', 'modal_forms'), 'alt' => t('Loading...'), 'title' => t('Loading')));
    $bounce_conert_popup_setting = array(
      'bounce-conert-style' => array(
        'modalSize' => array(
          'type' => 'fixed',
          'width' => $bounce_convert_modal_width,
          'height' => $bounce_convert_modal_height,
        ),
        'modalOptions' => array(
          'opacity' => floatval(variable_get('modal_forms_opacity', $bounce_convert_modal_opacity)),
          'background' => variable_get('modal_forms_background_color', $bounce_convert_modal_bgcolor),
        ),
        'animation' => 'fadeIn',
        'modalTheme' => 'BounceConertPopup',
//        'throbber' => $throbber,
//        'closeText' => t('Close'),
        'closeImage' => theme('image', array('path' => drupal_get_path('module', 'bounce_convert') . '/images/close-button.png', 'alt' => t('Close window'), 'title' => t('Close window')))
      ),
    );

    drupal_add_js($bounce_conert_popup_setting, 'setting');

    drupal_add_js(array('bounce_convert' => $bounce_convert_js_param), 'setting');
    drupal_add_css(drupal_get_path('module', 'bounce_convert') . '/css/bounce_convert.css');
    drupal_add_js(drupal_get_path('module', 'bounce_convert') . '/js/bounce_convert.js');
    drupal_add_js(drupal_get_path('module', 'bounce_convert') . '/js/bounce_convert_popup.js');
    // modal link (display:none)
    $extracontent = '<a class="ctools-use-modal ctools-modal-bounce-conert-style ctools-modal-modal-popup-medium" style="display:none;" href="' . $base_url . '/modal_forms/nojs/webform/' . $bounce_convert_webform_id . '">Campaign</a>';

    // Add link to content region.and trigger click event on browser exit
    $page[
        'content']['bounce_convert_modal'] = array(
      '#markup' => t($extracontent),
      '#weight' => 25,
    );
  }
}

/**
 * Implements hook_views_api().
 */
function bounce_convert_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'bounce_convert')
  );
}

/**
 * Implements hook_views_default_views().
 */
function bounce_convert_views_default_views() {
  $view = new view();
  $view->name = 'bounce_convert_campaigns';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Bounce Convert Campaigns';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Bounce Convert Campaigns';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['group_by'] = TRUE;
  $handler->display->display_options['access']['type'] = 'perm';
  $handler->display->display_options['access']['perm'] = 'administer content types';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['query']['options']['distinct'] = TRUE;
  $handler->display->display_options['query']['options']['pure_distinct'] = TRUE;
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '10';
  $handler->display->display_options['style_plugin'] = 'table';
  $handler->display->display_options['style_options']['columns'] = array(
    'title' => 'title',
    'field_bcc_active' => 'field_bcc_active',
    'changed' => 'changed',
  );
  $handler->display->display_options['style_options']['default'] = '-1';
  $handler->display->display_options['style_options']['info'] = array(
    'title' => array(
      'sortable' => 1,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'field_bcc_active' => array(
      'sortable' => 1,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
    'changed' => array(
      'sortable' => 0,
      'default_sort_order' => 'asc',
      'align' => '',
      'separator' => '',
      'empty_column' => 0,
    ),
  );
  /* Header: Global: Text area */
  $handler->display->display_options['header']['area']['id'] = 'area';
  $handler->display->display_options['header']['area']['table'] = 'views';
  $handler->display->display_options['header']['area']['field'] = 'area';
  $handler->display->display_options['header']['area']['label'] = 'Add new campaign';
  $handler->display->display_options['header']['area']['empty'] = TRUE;
  $handler->display->display_options['header']['area']['content'] = '<a href="/node/add/bounce-convert-campaign" alt="Add Campaign" title"Add Campaign">Add New Campaign</a>';
  $handler->display->display_options['header']['area']['format'] = 'filtered_html';
  /* No results behavior: Global: Text area */
  $handler->display->display_options['empty']['area']['id'] = 'area';
  $handler->display->display_options['empty']['area']['table'] = 'views';
  $handler->display->display_options['empty']['area']['field'] = 'area';
  $handler->display->display_options['empty']['area']['label'] = 'No result found';
  $handler->display->display_options['empty']['area']['empty'] = TRUE;
  $handler->display->display_options['empty']['area']['content'] = 'There are currently no campaign on your site. Create a <a href="/node/add/bounce-convert-campaign" alt="Add Campaign" title"Add Campaign">Bounce Convert Campaign</a> piece of content.';
  $handler->display->display_options['empty']['area']['format'] = 'filtered_html';
  /* Field: Content: Select webform */
  $handler->display->display_options['fields']['field_bcc_select_webform']['id'] = 'field_bcc_select_webform';
  $handler->display->display_options['fields']['field_bcc_select_webform']['table'] = 'field_data_field_bcc_select_webform';
  $handler->display->display_options['fields']['field_bcc_select_webform']['field'] = 'field_bcc_select_webform';
  $handler->display->display_options['fields']['field_bcc_select_webform']['exclude'] = TRUE;
  /* Field: Content: Nid */
  $handler->display->display_options['fields']['nid']['id'] = 'nid';
  $handler->display->display_options['fields']['nid']['table'] = 'node';
  $handler->display->display_options['fields']['nid']['field'] = 'nid';
  $handler->display->display_options['fields']['nid']['exclude'] = TRUE;
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = 'Name';
  $handler->display->display_options['fields']['title']['alter']['make_link'] = TRUE;
  $handler->display->display_options['fields']['title']['alter']['path'] = 'bounce-convert/[field_bcc_select_webform]/results';
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
  $handler->display->display_options['fields']['title']['link_to_node'] = FALSE;
  /* Field: Content: Active */
  $handler->display->display_options['fields']['field_bcc_active']['id'] = 'field_bcc_active';
  $handler->display->display_options['fields']['field_bcc_active']['table'] = 'field_data_field_bcc_active';
  $handler->display->display_options['fields']['field_bcc_active']['field'] = 'field_bcc_active';
  /* Field: SUM(Impressions/Conversions: Impression Status) */
  $handler->display->display_options['fields']['impression']['id'] = 'impression';
  $handler->display->display_options['fields']['impression']['table'] = 'bounce_convert_impressions';
  $handler->display->display_options['fields']['impression']['field'] = 'impression';
  $handler->display->display_options['fields']['impression']['group_type'] = 'sum';
  $handler->display->display_options['fields']['impression']['label'] = 'Total Impressions';
  /* Field: SUM(Impressions/Conversions: Conversion Status) */
  $handler->display->display_options['fields']['conversion']['id'] = 'conversion';
  $handler->display->display_options['fields']['conversion']['table'] = 'bounce_convert_impressions';
  $handler->display->display_options['fields']['conversion']['field'] = 'conversion';
  $handler->display->display_options['fields']['conversion']['group_type'] = 'sum';
  $handler->display->display_options['fields']['conversion']['label'] = 'Total Conversions';
  /* Field: Content: Updated date */
  $handler->display->display_options['fields']['changed']['id'] = 'changed';
  $handler->display->display_options['fields']['changed']['table'] = 'node';
  $handler->display->display_options['fields']['changed']['field'] = 'changed';
  $handler->display->display_options['fields']['changed']['date_format'] = 'time ago';
  /* Field: Content: Edit link */
  $handler->display->display_options['fields']['edit_node']['id'] = 'edit_node';
  $handler->display->display_options['fields']['edit_node']['table'] = 'views_entity_node';
  $handler->display->display_options['fields']['edit_node']['field'] = 'edit_node';
  $handler->display->display_options['fields']['edit_node']['label'] = 'Edit';
  /* Field: Content: Delete link */
  $handler->display->display_options['fields']['delete_node']['id'] = 'delete_node';
  $handler->display->display_options['fields']['delete_node']['table'] = 'views_entity_node';
  $handler->display->display_options['fields']['delete_node']['field'] = 'delete_node';
  $handler->display->display_options['fields']['delete_node']['label'] = 'Remove';
  /* Sort criterion: Content: Post date */
  $handler->display->display_options['sorts']['created']['id'] = 'created';
  $handler->display->display_options['sorts']['created']['table'] = 'node';
  $handler->display->display_options['sorts']['created']['field'] = 'created';
  $handler->display->display_options['sorts']['created']['order'] = 'DESC';
  /* Filter criterion: Content: Published */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = 1;
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
  /* Filter criterion: Content: Title */
  $handler->display->display_options['filters']['title']['id'] = 'title';
  $handler->display->display_options['filters']['title']['table'] = 'node';
  $handler->display->display_options['filters']['title']['field'] = 'title';
  $handler->display->display_options['filters']['title']['operator'] = 'word';
  $handler->display->display_options['filters']['title']['exposed'] = TRUE;
  $handler->display->display_options['filters']['title']['expose']['operator_id'] = 'title_op';
  $handler->display->display_options['filters']['title']['expose']['label'] = 'Campaign name';
  $handler->display->display_options['filters']['title']['expose']['operator'] = 'title_op';
  $handler->display->display_options['filters']['title']['expose']['identifier'] = 'title';
  $handler->display->display_options['filters']['title']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    3 => 0,
  );
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'bounce_convert_campaign' => 'bounce_convert_campaign',
  );

  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'admin/content/campaign';

  $views[$view->name] = $view;
  return $views;
}
