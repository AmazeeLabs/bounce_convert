<?php

/**
 * @file
 * Primarily Drupal hooks and global API functions to manipulate this module.
 *
 * This is the main module file for Bounce Convert. The main entry points into
 * this module are hook_node_info(),hook_field_group_info(),
 * bounce_convert_ctools_plugin_api() and hook_form(), where it handles
 * creating content type and form values.
 */
/**
 * Load bounce_convert_campaign.admin.inc
 */
module_load_include('inc', 'bounce_convert_campaign', 'bounce_convert_campaign.admin');

/**
 * Implements hook_ctools_plugin_api().
 */
function bounce_convert_campaign_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "field_group" && $api == "field_group") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_node_info().
 */
function bounce_convert_campaign_node_info() {
  $items = array(
    'bounce_convert_campaign' => array(
      'name' => t('Bounce Convert Campaign'),
      'base' => 'bounce_convert_campaign',
      'description' => t('Create a new campaign to detect and convert exiting web visitors into revenue.'),
      'has_title' => TRUE,
      'title_label' => t('Campaign title'),
    ),
  );
  return $items;
}

/**
 * Implements hook_field_group_info().
 */
function bounce_convert_campaign_field_group_info() {
  $export = array();

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_modal_options|node|bounce_convert_campaign|form';
  $field_group->group_name = 'group_bcc_modal_options';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Modal options',
    'weight' => '3',
    'children' => array(
      0 => 'field_bcc_background_color',
      1 => 'field_bcc_background_opacity',
      2 => 'field_bcc_modal_height',
      3 => 'field_bcc_modal_width',
    ),
    'format_type' => 'fieldset',
    'format_settings' => array(
      'formatter' => 'collapsible',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-modal-options field-group-fieldset',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_modal_options|node|bounce_convert_campaign|form'] = $field_group;

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_pages|node|bounce_convert_campaign|form';
  $field_group->group_name = 'group_bcc_pages';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = 'group_bcc_visibility_settings';
  $field_group->data = array(
    'label' => 'Pages',
    'weight' => '7',
    'children' => array(
      0 => 'field_bcc_pages_list',
      1 => 'field_bcc_pages_option',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-pages field-group-tab',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_pages|node|bounce_convert_campaign|form'] = $field_group;

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_user_roles|node|bounce_convert_campaign|form';
  $field_group->group_name = 'group_bcc_user_roles';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = 'group_bcc_visibility_settings';
  $field_group->data = array(
    'label' => 'Roles',
    'weight' => '8',
    'children' => array(
      0 => 'field_bcc_specific_user_roles',
    ),
    'format_type' => 'tab',
    'format_settings' => array(
      'formatter' => 'closed',
      'instance_settings' => array(
        'description' => '',
        'classes' => 'group-bcc-user-roles field-group-tab',
        'required_fields' => 1,
      ),
    ),
  );
  $export['group_bcc_user_roles|node|bounce_convert_campaign|form'] = $field_group;

  $field_group = new stdClass();
  $field_group->disabled = FALSE; /* Edit this to true to make a default field_group disabled initially */
  $field_group->api_version = 1;
  $field_group->identifier = 'group_bcc_visibility_settings|node|bounce_convert_campaign|form';
  $field_group->group_name = 'group_bcc_visibility_settings';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'bounce_convert_campaign';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->data = array(
    'label' => 'Visibility settings',
    'weight' => '7',
    'children' => array(
      0 => 'group_bcc_pages',
      1 => 'group_bcc_user_roles',
    ),
    'format_type' => 'tabs',
    'format_settings' => array(
      'formatter' => '',
      'instance_settings' => array(
        'classes' => 'group-bcc-visibility-settings field-group-tabs',
      ),
    ),
  );
  $export['group_bcc_visibility_settings|node|bounce_convert_campaign|form'] = $field_group;

  return $export;
}

/**
 * Implement hook_form()
 */
function bounce_convert_campaign_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implement hook_form_alter()
 * To update form field values after CRUD operation on webforms and user roles
 */
function bounce_convert_campaign_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == "bounce_convert_campaign_node_form") {
    //get form field languge for exact match
    $lang = $form['field_bcc_select_webform']['#language'];
    $form['field_bcc_select_webform'][$lang]['#options'] = bounce_convert_campaign_webforms();
    $form['field_bcc_specific_user_roles'][$lang]['#options'] = user_roles($membersonly = FALSE);
    //if node edit page then set default value
    if (arg(0) == 'node' && arg(2) == 'edit') {
      $node = node_load(arg(1));
      $field_bcc_select_webform = field_get_items('node', $node, 'field_bcc_select_webform');
      $form['field_bcc_select_webform'][$lang]['#default_value'] = $field_bcc_select_webform[0]['value'];

      $field_bcc_specific_user_roles = field_get_items('node', $node, 'field_bcc_specific_user_roles');
      if (!empty($field_bcc_specific_user_roles)) {
        foreach ($field_bcc_specific_user_roles as $value) {
          $rid = $value['value'];
          $field_bcc_roles_default_options[$rid] = $rid;
        }
        //Show campaign for specific roles
        $form['field_bcc_specific_user_roles'][$lang]['#default_value'] = $field_bcc_roles_default_options;
      }
    }
  }
}

function bounce_convert_campaign_init() {
  global $user;
  list ($bounce_convert_webform_id, $bounce_convert_cookie_expiry) = bounce_convert_check_campaigns($user->roles);
  if ($bounce_convert_webform_id) {
    $bounce_convert_js_param = array(
      'webform_id' => $bounce_convert_webform_id,
      'cookie_expiry' => $bounce_convert_cookie_expiry
    );
    global $base_url;

    drupal_add_js(array('bounce_convert_campaign' => $bounce_convert_js_param), 'setting');
    drupal_set_message(t('<a class="ctools-use-modal ctools-modal-modal-popup-medium" style="display:none;" href="' . $base_url . '/modal_forms/nojs/webform/' . $bounce_convert_webform_id . '">&nbsp;Link to click</a>'), '', FALSE);
    drupal_add_js(drupal_get_path('module', 'bounce_convert_campaign') . '/js/bounce_convert_campaign.js');
  }
}
